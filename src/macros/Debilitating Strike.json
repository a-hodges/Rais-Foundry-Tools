{
  "name": "Debilitating Strike",
  "type": "script",
  "_id": "VASs6406xX5WR4jW",
  "author": "UFqVA7oOCQDF3osw",
  "img": "icons/skills/melee/strike-sword-blood-red.webp",
  "scope": "global",
  "command": "const actor = canvas.tokens.controlled[0].actor;\nconst targets = game.user.targets;\nconst predicates = Object.keys(actor.rollOptions.all);\n\nasync function id2link(uuid) {\n  const item = await fromUuid(uuid);\n  const name = item.name;\n  return `@UUID[${uuid}]{${name}}`;\n}\n\nconst debil_feature = actor.items.getName(\"Debilitating Strike\");\nif (debil_feature === undefined) {\n  Dialog.prompt({\n    title: \"Invalid Action\",\n    content: \"Actor does not have the Debilitating Strike feature.\",\n  });\n}\n\nconst debil = debil_feature.rules.find((rule) => rule.key === \"RollOption\" && rule.label === \"Debilitation\");\n\nconst options = debil.suboptions.filter((opt) => game.pf2e.Predicate.test(opt.predicate, predicates));\nconst buttons = await Promise.all(\n  options.map(async (opt) => ({\n    label: (await game.pf2e.TextEditor.enrichHTML(`@Localize[${opt.label}]`)) + (opt.selected ? \"*\" : \"\"),\n    callback: () => opt.value,\n  }))\n);\n\nconst selection = await Dialog.wait({\n  title: \"Select Debilitation\",\n  content: \"Which debilitation are you applying?\",\n  buttons: buttons,\n});\n\nawait debil.toggle(selection, selection);\n\n/*\nlet enduring = false;\nif (game.pf2e.Predicate.test([\"feat:enduring-debilitation\"], predicates)) {\n  enduring = await Dialog.confirm({\n    title: \"Enduring Debilitation\",\n    content: \"Are you using Endurting Debilitation?\"\n  });\n}\nconst effect = (await fromUuid(enduring ? \"Compendium.pf2e.feat-effects.Item.PX6WdrpzEdUzKRHx\" : \"Compendium.pf2e.feat-effects.Item.yBTASi3FvnReAwHy\")).clone();\n*/\n\nconst links = [];\n\nif (selection === \"bloody\") {\n  const DamageRoll = CONFIG.Dice.rolls.find((r) => r.name === \"DamageRoll\");\n  const r = await new DamageRoll(\"3d6[bleed]\").evaluate();\n  links.push(await r.render());\n} else if (selection === \"critical\") {\n  links.push(await id2link(`Actor.${actor.id}.Item.Hfej0QE9TMK5JgtJ`));\n} else if (selection === \"precision-damage\") {\n} else if (selection === \"weakness\") {\n  const damage_type = await Dialog.wait({\n    title: \"Select Damage Type\",\n    content: \"Apply weakness 5 to the selected damage type.\",\n    buttons: [\n      { label: \"bludgeoning\", callback: () => \"b\" },\n      { label: \"piercing\", callback: () => \"p\" },\n      { label: \"slashing\", callback: () => \"s\" },\n    ],\n  });\n  const effect = {\n    b: \"Compendium.rais-tools.effects.Item.7enhugMtLIXsJETm\",\n    p: \"Compendium.rais-tools.effects.Item.R8bU2yVflhabDDij\",\n    s: \"Compendium.rais-tools.effects.Item.bJZTOPlBmz24Vkoc\",\n  }[damage_type];\n  if (effect !== null) {\n    links.push(await id2link(effect));\n  }\n} else {\n  const effect = {\n    clumsy: \"Compendium.rais-tools.effects.Item.MAleBa1gZ8L8Yiyz\",\n    enfeebled: \"Compendium.rais-tools.effects.Item.bzhoEn7NXbt0cAt0\",\n    \"off-guard\": \"Compendium.rais-tools.effects.Item.lPC1YRkVIveNbP1M\",\n    \"prevent-flanking\": \"Compendium.rais-tools.effects.Item.KjjhbZQFNC0tdbPa\",\n    \"prevent-reactions\": \"Compendium.rais-tools.effects.Item.ju92Cdq25ndSDD6m\",\n    \"prevent-step\": \"Compendium.rais-tools.effects.Item.0vPlYSQumRUlz67H\",\n    \"reduce-cover\": \"Compendium.rais-tools.effects.Item.mDfcEAdP2hAgo25H\",\n    \"speed-penalty\": \"Compendium.rais-tools.effects.Item.czL2fSW3isNtVmz8\",\n    stupefied: \"Compendium.rais-tools.effects.Item.s5oEnXUYn49wT3wj\",\n  }[selection];\n  if (effect !== null) {\n    links.push(await id2link(effect));\n  }\n}\n\nawait ChatMessage.create(\n  {\n    author: game.users.current,\n    content: `${actor.name} applies ${selection} debilitation!\\n` + links.join(\"\\n\"),\n    style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n  },\n  { chatBubble: true }\n);\n",
  "sort": 0,
  "_key": "!macros!VASs6406xX5WR4jW"
}